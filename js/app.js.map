{"version":3,"sources":["object-store.js","page-actions.js","user.js"],"names":["ObjectStore","GetStoredUsers","storedUsers","JSON","parse","localStorage","collection","forEach","user","push","User","self","exists","obj","some","item","equal","add","stringify","query","remove","filter","addUser","e","stopPropagation","preventDefault","newFirstName","newUserForm","querySelector","newLastName","newEmail","newUser","firstName","value","lastName","email","showUserError","focus","userTools","usersList","showUsers","userListElement","innerHTML","i","length","userListItem","document","createElement","userNameElement","className","innerText","userEmailElement","appendChild","makeButtons","parentElement","index","userEditCont","userEdit","userDeleteCont","userDelete","addEventListener","removeChild","target","parentNode","editFirstName","editLastName","editEmail","modal","style","display","sortUserList","sort","a","b","name","reverse","searchUserList","toLowerCase","username","indexOf","msg","userError","bottom","setTimeout","set","editUser","editedUser","spec","trim","otherUser","editUserForm","userListSort","userListSearch"],"mappings":"AAKA,QAAAA,eAQA,QAAAC,KACA,GAAAC,GAAAC,KAAAC,MAAAC,aAAAC,WAIA,OAHAJ,GAAAK,QAAA,SAAAC,GACAF,EAAAG,KAAAC,KAAAF,MAEAF,EAXA,GAAAA,KAEAD,cAAAC,aACAA,EAAAL,IAWA,IAAAU,IACAC,OAAA,SAAAC,GACA,MAAAP,GAAAQ,KAAA,SAAAC,GACA,MAAAF,GAAAG,MAAAD,MAGAE,IAAA,SAAAJ,GACA,MAAAF,GAAAC,OAAAC,IAKA,GAJAP,EAAAG,KAAAI,GACAR,aAAAC,WAAAH,KAAAe,UAAAZ,IACA,IAIAa,MAAA,WACA,MAAAb,IAEAc,OAAA,SAAAP,GACAP,EAAAA,EAAAe,OAAA,SAAAN,GACA,OAAAF,EAAAG,MAAAD,KAEAV,aAAAC,WAAAH,KAAAe,UAAAZ,IAIA,OAAAK,GCpBA,QAAAW,SAAAC,GACAA,EAAAC,kBACAD,EAAAE,gBAEA,IAAAC,GAAAC,YAAAC,cAAA,2BACAC,EAAAF,YAAAC,cAAA,0BACAE,EAAAH,YAAAC,cAAA,uBACAG,GACAC,UAAAN,EAAAO,MACAC,SAAAL,EAAAI,MACAE,MAAAL,EAAAG,MAGA,KACAzB,KAAAE,KAAAqB,GAEA,MAAAR,GAGA,MAFAa,eAAAb,OACAG,GAAAW,QAGAC,UAAArB,IAAAT,KAGA,IAAA+B,GAAAD,UAAAnB,OACAqB,WAAAD,GAEAb,EAAAO,MAAA,GACAJ,EAAAI,MAAA,GACAH,EAAAG,MAAA,GAEAP,EAAAW,QAGA,QAAAG,WAAAD,GAEAE,gBAAAC,UAAA,EAGA,KAAA,GAAAC,GAAA,EAAAA,EAAAJ,EAAAK,SAAAD,EAAA,CAEA,GAAAE,GAAAC,SAAAC,cAAA,MAGAC,EAAAF,SAAAC,cAAA,OACAC,GAAAC,UAAA,sBACAD,EAAAE,UAAAX,EAAAI,GAAAX,UAAA,IAAAO,EAAAI,GAAAT,QAGA,IAAAiB,GAAAL,SAAAC,cAAA,OACAI,GAAAF,UAAA,aACAE,EAAAD,UAAAX,EAAAI,GAAAR,MAGAU,EAAAO,YAAAJ,GACAH,EAAAO,YAAAD,GAGAN,EAAAQ,YAAAR,EAAAF,GAGAF,gBAAAW,YAAAP,IAIA,QAAAQ,aAAAC,EAAAC,GACAhB,UAAAD,UAAAnB,OAGA,IAAAqC,GAAAV,SAAAC,cAAA,OACAS,GAAAP,UAAA,WACA,IAAAQ,GAAAX,SAAAC,cAAA,SACAU,GAAAR,UAAA,mBACAQ,EAAAP,UAAA,GAGA,IAAAQ,GAAAZ,SAAAC,cAAA,OACAW,GAAAT,UAAA,WACA,IAAAU,GAAAb,SAAAC,cAAA,SAiCA,OAhCAY,GAAAV,UAAA,mBACAU,EAAAT,UAAA,IAGAS,EAAAC,iBAAA,QAAA,SAAArC,GACAkB,gBAAAoB,YAAAtC,EAAAuC,OAAAC,WAAAA,YACAzB,UAAAlB,OAAAmB,UAAAgB,IACAhB,UAAAD,UAAAnB,QACAqB,UAAAD,aAGAkB,EAAAG,iBAAA,QAAA,SAAArC,GACAA,EAAAC,kBACAD,EAAAE,iBAGAuC,cAAA/B,MAAAM,UAAAgB,GAAAvB,UACAiC,aAAAhC,MAAAM,UAAAgB,GAAArB,SACAgC,UAAAjC,MAAAM,UAAAgB,GAAApB,MACAgC,MAAAC,MAAAC,QAAA,UAKAb,EAAAJ,YAAAK,GACAC,EAAAN,YAAAO,GAGAL,EAAAF,YAAAI,GACAF,EAAAF,YAAAM,GAGAJ,EAGA,QAAAgB,cAAA/C,GACA,GAAAgD,GAAAhD,EAAAuC,OAAA7B,MACAM,EAAAD,UAAAnB,OACAoB,GAAAA,EAAAgC,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAE,KAAAD,EAAAC,KACA,EAEAF,EAAAE,KAAAD,EAAAC,KACA,GAEA,IAEA,QAAAH,IACAhC,EAAAA,EAAAoC,WAEAnC,UAAAD,GAGA,QAAAqC,gBAAArD,GACA,GAAAgD,GAAAhD,EAAAuC,OAAA7B,MAAA4C,cACAtC,EAAAD,UAAAnB,OACA,MAAAoD,IACAhC,EAAAA,EAAAlB,OAAA,SAAAb,GACA,GAAAsE,GAAAtE,EAAAkE,KAAAG,aACA,OAAAC,GAAAC,QAAAR,IAAA,KAGA/B,UAAAD,GAGA,QAAAH,eAAA4C,GACAC,UAAA/B,UAAA8B,EACAC,UAAAb,MAAAc,OAAA,OACAC,WAAA,WACAF,UAAAb,MAAAc,OAAA,OACA,KACAE,IAGA,QAAAC,UAAA9D,GACAA,EAAAC,kBACAD,EAAAE,iBAEA0C,MAAAC,MAAAC,QAAA,MAEA,IAAAiB,IACAtD,UAAAgC,cAAA/B,MACAC,SAAA+B,aAAAhC,MACAE,MAAA+B,UAAAjC,MAIA,KACAzB,KAAAE,KAAA4E,GAEA,MAAA/D,GAGA,MAFAa,eAAAb,OACAG,cAAAW,QAGAC,UAAAlB,OAAAZ,MACA8B,UAAArB,IAAAT,KAGA,IAAA+B,GAAAD,UAAAnB,OACAqB,WAAAD,GC3MA,QAAA7B,MAAA6E,GAEA,IAAAA,EAAAvD,WAAA,KAAAuD,EAAAvD,UAAAwD,OACA,KAAA,wBACA,KAAAD,EAAArD,UAAA,KAAAqD,EAAArD,SAAAsD,OACA,KAAA,uBACA,KAAAD,EAAApD,OAAA,KAAAoD,EAAApD,MAAAqD,OACA,KAAA,mBAEA,IAAA7E,IACAqB,UAAAuD,EAAAvD,UAAAwD,OACAtD,SAAAqD,EAAArD,SAAAsD,OACArD,MAAAoD,EAAApD,MAAAqD,OACAd,KAAAa,EAAAvD,UAAAwD,OAAA,IAAAD,EAAArD,SAAAsD,OACAxE,MAAA,SAAAyE,GACA,MAAA9E,GAAAwB,QAAAsD,EAAAtD,OAIA,OAAAxB,GDrBA,GAAAgB,aAAAmB,SAAAlB,cAAA,kBACA8D,aAAA5C,SAAAlB,cAAA,mBACAuC,MAAArB,SAAAlB,cAAA,oBACAa,gBAAAK,SAAAlB,cAAA,cACA+D,aAAA7C,SAAAlB,cAAA,mBACAgE,eAAA9C,SAAAlB,cAAA,qBACAqD,UAAAnC,SAAAlB,cAAA,eACAoC,cAAA0B,aAAA9D,cAAA,2BACAqC,aAAAyB,aAAA9D,cAAA,0BACAsC,UAAAwB,aAAA9D,cAAA,uBACApB,QACA8B,UAAAtC,aAGA2B,aAAAiC,iBAAA,SAAAtC,SACAoE,aAAA9B,iBAAA,SAAAyB,UACAM,aAAA/B,iBAAA,SAAAU,cACAsB,eAAAhC,iBAAA,QAAAgB,eAKA,IAAArC,WAAAD,UAAAnB,OACAqB,WAAAD","file":"app.js","sourcesContent":["// ObjectStore is a generic class used to uniquely store objects\n//\n// See the assignment for details:\n// https://github.com/tiy-durham-fe-2015/curriculum/tree/master/assignments/user_mgmt\n//\nfunction ObjectStore() {\n  // TODO: implement the object store class\n  var collection = [];\n\n  if (localStorage.collection) {\n    collection = GetStoredUsers();\n  }\n\n  function GetStoredUsers() {\n    var storedUsers = JSON.parse(localStorage.collection);\n    storedUsers.forEach(function(user){\n      collection.push(User(user));\n    });\n    return collection;\n  }\n\n  var self = {\n    exists: function(obj) {\n      return collection.some(function(item){\n        return obj.equal(item);\n      });\n    },\n    add: function(obj) {\n      if(!self.exists(obj)) {\n        collection.push(obj);\n        localStorage.collection = JSON.stringify(collection);\n        return true;\n      }\n      return false;\n    },\n    query: function() {\n      return collection;\n    },\n    remove: function(obj) {\n      collection = collection.filter(function(item){\n        return !obj.equal(item);\n      });\n      localStorage.collection = JSON.stringify(collection);\n      return;\n    }\n  };\n  return self;\n}\n","  var newUserForm = document.querySelector('.add-user-form'),\n      editUserForm = document.querySelector('.edit-user-form'),\n      modal = document.querySelector('.modal-edit-user'),\n      userListElement = document.querySelector('.user-list'),\n      userListSort = document.querySelector('.user-list-sort'),\n      userListSearch = document.querySelector('.user-list-search'),\n      userError = document.querySelector('.user-error'),\n      editFirstName = editUserForm.querySelector('input[name=\"firstName\"]'),\n      editLastName = editUserForm.querySelector('input[name=\"lastName\"]'),\n      editEmail = editUserForm.querySelector('input[name=\"email\"]'),\n      user = {},\n      userTools = ObjectStore();\n\n  // MVP\n  newUserForm.addEventListener('submit', addUser);\n  editUserForm.addEventListener('submit', editUser);\n  userListSort.addEventListener('change', sortUserList);\n  userListSearch.addEventListener('keyup', searchUserList);\n\n  // Stretch\n    // modal popup\n    // persist values\n  var usersList = userTools.query();\n  showUsers(usersList);\n\n\n  function addUser(e){\n    e.stopPropagation();\n    e.preventDefault();\n    // capture input from the form and assign it to the object\n    var newFirstName = newUserForm.querySelector('input[name=\"firstName\"]');\n    var newLastName = newUserForm.querySelector('input[name=\"lastName\"]');\n    var newEmail = newUserForm.querySelector('input[name=\"email\"]');\n    var newUser = {\n      firstName: newFirstName.value,\n      lastName: newLastName.value,\n      email: newEmail.value\n    };\n\n    try {\n      user = User(newUser);\n    }\n    catch( e ) {\n      showUserError(e);\n      newFirstName.focus();\n      return;\n    }\n    userTools.add(user);\n    // add catch\n\n    var usersList = userTools.query();\n    showUsers(usersList);\n    // clear inputs\n    newFirstName.value = '';\n    newLastName.value = '';\n    newEmail.value = '';\n    // return focus to the first name\n    newFirstName.focus();\n  }\n\n  function showUsers(usersList) {\n    // get a list of users and clear the element\n    userListElement.innerHTML = '';\n\n    // push them out to the page\n    for(var i = 0; i < usersList.length; ++i) {\n      // an li for every item\n      var userListItem = document.createElement('li');\n\n      //create name\n      var userNameElement = document.createElement('span');\n      userNameElement.className = 'user-name user-data';\n      userNameElement.innerText = usersList[i].firstName + ' ' + usersList[i].lastName;\n\n      // create email\n      var userEmailElement = document.createElement('span');\n      userEmailElement.className = 'user-email';\n      userEmailElement.innerText = usersList[i].email;\n\n      // add name & email\n      userListItem.appendChild(userNameElement);\n      userListItem.appendChild(userEmailElement);\n\n      // add buttons\n      userListItem = makeButtons(userListItem, i);\n\n      // put it all together\n      userListElement.appendChild(userListItem);\n    }\n  }\n\n  function makeButtons(parentElement, index) {\n    usersList = userTools.query();\n\n    // Make Edit Button\n    var userEditCont = document.createElement('span');\n    userEditCont.className = 'user-data';\n    var userEdit = document.createElement('button');\n    userEdit.className = 'user-list-button';\n    userEdit.innerText = 'e';\n\n    // Make Delete Button\n    var userDeleteCont = document.createElement('span');\n    userDeleteCont.className = 'user-data';\n    var userDelete = document.createElement('button');\n    userDelete.className = 'user-list-button';\n    userDelete.innerText = 't';\n\n    // wire them up\n    userDelete.addEventListener('click', function(e){\n      userListElement.removeChild(e.target.parentNode.parentNode);\n      userTools.remove(usersList[index]);\n      usersList = userTools.query();\n      showUsers(usersList);\n    });\n\n    userEdit.addEventListener('click', function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      // set values\n      editFirstName.value = usersList[index].firstName;\n      editLastName.value = usersList[index].lastName;\n      editEmail.value = usersList[index].email;\n      modal.style.display = 'block';\n\n    });\n\n    // add buttons to span containers\n    userEditCont.appendChild(userEdit);\n    userDeleteCont.appendChild(userDelete);\n\n    // put it all together\n    parentElement.appendChild(userEditCont);\n    parentElement.appendChild(userDeleteCont);\n\n    // give it back\n    return parentElement;\n  };\n\n  function sortUserList(e) {\n    var sort = e.target.value;\n    var usersList = userTools.query();\n    usersList = usersList.sort(function(a, b){\n      if (a.name > b.name) {\n        return 1;\n      }\n      if (a.name < b.name) {\n        return -1;\n      }\n      return 0;\n    });\n    if (sort === 'Z-A'){\n      usersList = usersList.reverse();\n    }\n    showUsers(usersList);\n  };\n\n  function searchUserList(e){\n    var sort = e.target.value.toLowerCase();\n    var usersList = userTools.query();\n    if (sort !== '') {\n      usersList = usersList.filter(function(user) {\n        var username = user.name.toLowerCase();\n        return username.indexOf( sort ) >= 0;\n      });\n    }\n    showUsers(usersList);\n  };\n\n  function showUserError(msg) {\n    userError.innerText = msg;\n    userError.style.bottom = '-3em';\n    setTimeout(function(){\n      userError.style.bottom = '1em';\n    }, 3000);\n    set\n  };\n\n  function editUser(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    modal.style.display = 'none';\n\n    var editedUser = {\n      firstName: editFirstName.value,\n      lastName: editLastName.value,\n      email: editEmail.value\n    };\n\n\n    try {\n      user = User(editedUser);\n    }\n    catch( e ) {\n      showUserError(e);\n      newFirstName.focus();\n      return;\n    }\n    userTools.remove(user);\n    userTools.add(user);\n    // add catch\n\n    var usersList = userTools.query();\n    showUsers(usersList);\n\n\n    // add edited(new) user to the array\n\n    // regenerate array\n\n    //  refresh page\n\n  }\n","// User constructs a new user object. For more details, see\n// https://github.com/tiy-durham-fe-2015/curriculum/tree/master/assignments/user_mgmt\nfunction User(spec) {\n  // TODO: implement the user class, and get user unit tests passing\n  if (!spec.firstName || spec.firstName.trim() === '') {\n    throw 'First name is required';\n  } else if (!spec.lastName || spec.lastName.trim() === '') {\n    throw 'Last name is required';\n  } else if (!spec.email || spec.email.trim() === '') {\n    throw 'Email is required';\n  }\n  var self = {\n    firstName: spec.firstName.trim(),\n    lastName: spec.lastName.trim(),\n    email: spec.email.trim(),\n    name: spec.firstName.trim() + ' ' + spec.lastName.trim(),\n    equal: function (otherUser) {\n      return self.email === otherUser.email;\n    }\n  };\n\n  return self;\n}\n"],"sourceRoot":"/source/"}